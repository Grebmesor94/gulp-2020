Instalaciones únicas
1-	npm install --global gulp-cli
    Este comando lo teneis que ejecutar una sola vez. Sirve para instalar gulp de forma global en el equipo para tenerlo disponible en todos los proyectos

Instalaciones que se han de ejecutar en cada proyecto en el que querais incluir gulp
2-	npm init
3-	npm install --save-dev gulp
4-	npm install --save-dev @babel/core @babel/register @babel/preset-env

El proyecto debe contener:
    - Un archivo .babelrc donde pondremos la configuración de babel
    - Un archivo gulpfile.babel.js donde pondremos la configuración de gulp (en el caso de usar babel 6 el archivo deberá llamarse gulpfile.js)

Transpilar JavaScript
    gulp-babel:
    Este el módulo que usará gulp para convertir el código a es5
    npm install --save-dev gulp-babel

    gulp-terser:
    Es la nueva versión de uglify, sirve para ofuscar el código
    npm install --save-dev gulp-terser
    
    gulp-concat:
    Une todos nuestros archivos js en uno solo
    npm install --save-dev gulp-concat

HTML
    npm install --save gulp-htmlmin
    Minifica y limpia nuestro HTML
    https://github.com/kangax/html-minifier (aqui puedes ver todas las opciones) yo uso collapsiblewhitespace y removecomments
    

CSS
    npm install --save-dev gulp-postcss cssnano autoprefixer
    postcss = .pipe(postcss(cssplugins))
    cssnano y autoprefixer se usan como plugins para postcss... const cssPlugins = [ cssnano(), autoprefixer()]
    
    Para utilizar autoprefixer hay dos opciones, o añadir los navegadores a los que quieres dar soporte al package.json o hacerlo en un archivo separado.
    .browserslistrc 

    postCSS: https://github.com/postcss/postcss/blob/master/docs/plugins.md

PUG
    npm install --save-dev gulp-pug
    
SASS
    npm install --save-dev gulp-sass
    .pipe(sass({outputStyle: 'compressed'}) opcion de node.sass
    
    usar postcss luego de sass

purgar/limpiar CSS
    npm install --save-dev gulp-purgecss 
    se usa el archivo final styles.css (carpeta public)
    .pipe(purgecss({content: ['./public/*.html']}))

Limpiar caché
    npm install --save-dev gulp-cache-bust
    para usarlo usamos .pipe(cachebust({type: 'timestamp'}) en pug o html-min
    
Comprimir imágenes
    npm install --save-dev gulp-imagemin
    .pipe(purgecss({content: ['./public/*.html']}))
    
Browser Sync
    npm install --save-dev browser-sync
    import {init, stream, reload}
    init: se usa como funcion en default init({server: './public'})
    stream: se usa al final del sass o css .pipe(stream())
    reload: se usa en el watch de babel y pug/ html-min = .on('change', reload)

Gulp Plumber
    npm install --save-dev gulp-plumber
    para usar plumber se coloca luego de src en todas las tareas.
